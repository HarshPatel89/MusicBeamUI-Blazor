@page "/login"
@using MusicBeam.Models.User
@inject NavigationManager navigationManager
@*  @inject AppState state *@
@rendermode InteractiveServer

<h3>Login</h3>

@* <EditForm Model="loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="card border-3 border-dark rounded p-3 d-flex align-items-center" style="width:700px; margin-left:20%">
        <div class="form-group" style="width:500px;">
            <label for="username">Username:</label>
            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        </div>

        <div class="form-group m-2" style="width:500px;">
            <label for="password">Password:</label>
            <div class="input-group">
                <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="@GetInputType()" />
                <button type="button" class="btn btn-outline-secondary" @onclick="TogglePasswordVisibility">
                    <i class="@GetEyeIconClass()"></i>
                </button>
            </div>
        </div>

        <div class="d-flex flex-row justify-content-center m-4">
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
    </div>
</EditForm> *@


<div class="auth-page">
        <div class="container page">
            <div class="row">
                <div class="col-md-6 offset-md-3 col-xs-12">
                    <h1 class="text-xs-center">Sign in</h1>
                    <p class="text-xs-center">
                        <a href="/signup">Need an account?</a>
                    </p>
                    <ErrorMessages Errors=@response.errors />
                    <form>
                        <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="email" placeholder="Email" bind="@(loginModel.Email)" />
                        </fieldset>
                        <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="password" placeholder="Password" bind="@(loginModel.Password)" />
                        </fieldset>
                    <button class="btn btn-lg btn-primary pull-xs-right" type="submit" onclick="@HandleValidSubmit()">
                            Sign in
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>



@code {
    private LoginRequest loginModel = new LoginRequest();
    private Boolean showPassword = false;

    private UserResponse response = new UserResponse();

    private async Task HandleValidSubmit()
    {
        // Call your authentication service to perform login
        // bool isAuthenticated = await authService.LoginAsync(loginModel);

        // if (isAuthenticated)
        // {
        //     // Redirect to a different page upon successful login
        //     navigationManager.NavigateTo("/profile");
        // }
        // else
        // {
        //     // Handle authentication failure (show error message, etc.)
        //     // For simplicity, just reset the password field in this example
        //     loginModel.Password = string.Empty;
        // }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
        StateHasChanged();
    }

    private string GetInputType()
    {
        return showPassword ? "text" : "password";
    }

    private string GetEyeIconClass()
    {
        return showPassword ? "bi bi-eye-slash-fill" : "bi bi-eye-fill";
    }

    

}


